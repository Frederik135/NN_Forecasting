
Sanity Checking: |          | 0/? [00:00<?, ?it/s]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
  | Name      | Type      | Params
----------------------------------------
0 | model     | LSTMModel | 10.7 K
1 | criterion | MSELoss   | 0
----------------------------------------
10.7 K    Trainable params
0         Non-trainable params
10.7 K    Total params

c:\Users\janfr\anaconda3\envs\pytorch_3_10\lib\site-packages\torch\nn\modules\loss.py:535: UserWarning: Using a target size (torch.Size([64])) that is different to the input size (torch.Size([64, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)


Epoch 0: 100%|██████████| 95/95 [00:04<00:00, 19.75it/s, v_num=h73o, train_loss_step=0.653, val_loss_step=1.330, val_loss_epoch=0.954, train_loss_epoch=0.233]
c:\Users\janfr\anaconda3\envs\pytorch_3_10\lib\site-packages\torch\nn\modules\loss.py:535: UserWarning: Using a target size (torch.Size([11])) that is different to the input size (torch.Size([11, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
c:\Users\janfr\anaconda3\envs\pytorch_3_10\lib\site-packages\torch\nn\modules\loss.py:535: UserWarning: Using a target size (torch.Size([41])) that is different to the input size (torch.Size([41, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
















